CREATE TABLE 지출내역서_T(
             날짜 DATE
           , 입금액 NUMBER
           , 출금액 NUMBER
           , 비고 VARCHAR2(450)
);

CREATE TABLE 지출내역구분_T(
           구분_ID NUMBER CONSTRAINT PK_지출내역구분_T_구분_ID PRIMARY KEY
         , 구분명 VARCHAR2(100)
);

ALTER TABLE 지출내역서_T ADD  ACOOUNT_ID NUMBER CONSTRAINT PK_지출내역서_T_ACCOUNT_ID PRIMARY KEY;
ALTER TABLE 지출내역서_T MODIFY 비고 VARCHAR(900);
ALTER TABLE 지출내역서_T ADD ACCOUNT_TYPE NUMBER CONSTRAINT FK_지출내역서_T_ACCOUNT_TYPE REFERENCES 지출내역구분_T(구분_ID);


SELECT * FROM USER_ALL_TABLES WHERE TABLE_NAME LIKE '지출내역%';
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME LIKE '지출내역%';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE '지출내역%';

INSERT INTO 지출내역구분_T VALUES(1, '은행예금');
INSERT INTO 지출내역구분_T VALUES(2, '은행예금');
INSERT INTO 지출내역구분_T(구분_ID,구분명) VALUES(3, '교통비');
INSERT INTO 지출내역구분_T(구분명,구분_ID) VALUES('통신비',4);

SELECT * FROM 지출내역구분_T;

CREATE TABLE 지출내역구분_COPY(
           구분_ID NUMBER CONSTRAINT PK_지출내역구분_COPY_구분_ID PRIMARY KEY
         , 구분명 VARCHAR2(100)
);

INSERT INTO 지출내역구분_COPY(
         SELECT 구분_ID, 구분명
          FROM 지출내역구분_T
);

SELECT * FROM 지출내역구분_COPY;
DELETE FROM 지출내역구분_COPY;

SELECT * FROM 지출내역구분_T WHERE 1=0; --아무것도 조회가 안되게
SELECT * FROM 지출내역구분_T WHERE 1=1; --모든것이 나오게

CREATE TABLE 지출내역구분_COPY2 
    AS SELECT 구분명 FROM 지출내역구분_T
    WHERE 1=0;
   
   INSERT ALL 
     INTO 지출내역구분_COPY VALUES(idx, name)
     INTO 지출내역구분_COPY2 VALUES(name)
    SELECT 구분_ID AS idx,구분명 AS name
    FROM 지출내역구분_T;
     

SELECT * FROM 지출내역구분_COPY;
SELECT * FROM 지출내역구분_COPY2;
DELETE FROM 지출내역구분_COPY;
DELETE FROM 지출내역구분_COPY2;

/*
 * COMMISSION_PCT 유무에 따라 
 * 커미션이 있는 경우 
 * EMP_COMMISSION 테이블에 사번,이름,급여,커미션PCT 정보를 저장하고
 * 커미션이 없는 경우
 * EMP_NO_COMMISSION 테이블에 사번,이름 급여 정보를 저장한다.
 * 
 */

CREATE TABLE EMP_COMMISSION (
        사번 NUMBER
      , 이름 VARCHAR(100)
      , 급여 NUMBER
      , 커미션PCT NUMBER
);
CREATE TABLE EMP_NO_COMMISSION (
        사번 NUMBER
      , 이름 VARCHAR(100)
      , 급여 NUMBER
);

INSERT ALL
INTO EMP_COMMISSION VALUES(사번,이름,급여,커미션PCT)
SELECT EMPLOYEE_ID AS 사번, CONCAT(FIRST_NAME, ' ' || LAST_NAME) AS 이름, SALARY AS 급여, COMMISSION_PCT AS 커미션PCT
FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;

INSERT ALL
INTO EMP_NO_COMMISSION VALUES(사번,이름,급여)
SELECT EMPLOYEE_ID AS 사번, CONCAT(FIRST_NAME, ' ' || LAST_NAME) AS 이름, SALARY AS 급여
FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;

CREATE TABLE EMP_COMMISSION
AS SELECT EMPLOYEE_ID AS 사번
, CONCAT(FIRST_NAME, ' ' || LAST_NAME) AS 이름
, SALARY AS 급여
, COMMISSION_PCT AS 커미션PCT
FROM EMPLOYEES
WHERE 1=0;

CREATE TABLE EMP_NO_COMMISSION
AS SELECT EMPLOYEE_ID AS 사번
, CONCAT(FIRST_NAME, ' ' || LAST_NAME) AS 이름
, SALARY AS 급여
FROM EMPLOYEES
WHERE 1=0;

INSERT ALL
WHEN 커미션PCT IS NOT NULL
THEN INTO EMP_COMMISSION VALUES(사번,이름,급여,커미션PCT)
WHEN 커미션PCT IS NULL
THEN INTO EMP_NO_COMMISSION VALUES(사번,이름,급여)
SELECT EMPLOYEE_ID AS 사번, CONCAT(FIRST_NAME, ' ' || LAST_NAME) AS 이름, SALARY AS 급여, COMMISSION_PCT AS 커미션PCT
FROM EMPLOYEES;

SELECT * FROM EMP_COMMISSION;
SELECT * FROM EMP_NO_COMMISSION;

DELETE EMP_COMMISSION;
DELETE EMP_NO_COMMISSION;

DROP TABLE EMP_COMMISSION;
DROP TABLE EMP_NO_COMMISSION;

SELECT * FROM EMPLOYEES;
ROLLBACK; 
COMMIT; 
--트랜젝션
